const { defineConfig } = require("cypress");
const allureWriter = require("@shelex/cypress-allure-plugin/writer");
require("dotenv").config(); // –ü–æ–¥–∫–ª—é—á–∞–µ–º .env

module.exports = defineConfig({
  e2e: {
    baseUrl: "https://tree.taiga.io/",
    specPattern: "cypress/e2e/**/*.cy.js", // üëà –£–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫–æ –≤—Å–µ–º —Ç–µ—Å—Ç–∞–º
    setupNodeEvents(on, config) {
      allureWriter(on, config); // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Allure

      // üëá –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ –æ—Ç—á–µ—Ç
      on("task", {
        hideSensitiveData(step) {
          if (step.includes("password") || step.includes("CYPRESS_PASSWORD")) {
            return null; // üëà –ü–æ–ª–Ω–æ—Å—Ç—å—é —É–±–∏—Ä–∞–µ–º —à–∞–≥ –∏–∑ –æ—Ç—á—ë—Ç–∞
          }
          return step;
        },
      });


      return config;
    },
  },
  env: {
    CYPRESS_USERNAME: process.env.CYPRESS_USERNAME || "romedtestuser",
    CYPRESS_PASSWORD: process.env.CYPRESS_PASSWORD || "qwerty",
    CYPRESS_EMAIL:    process.env.CYPRESS_EMAIL || "romedtestuser@getnada.com",
    CYPRESS_PROJECT_SLUG: process.env.CYPRESS_PROJECT_SLUG || "romed-testpilot-ui-api-autotests"
  },
});

